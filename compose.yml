version: '3.8'

services:
  user_service:
    build:
      context: ./User_microservice/user_service  
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    networks:
      - my_network
    volumes:
      - ./User_microservice/user_service:/code  
    depends_on:
      - dapr_sidecar_user
      - postgres_db
      - broker

  dapr_sidecar_user:
    image: daprio/dapr
    command: ["dapr", "run", "--app-id", "user_service", "--dapr-http-port","3500" , "--app-port", "8000", "--", "python", "main.py"]
    networks:
      - my_network
    volumes:
      - ./User_microservice/user_service:/code  

  product_service:
    build:
      context: ./Product_Service/product_service 
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    networks:
      - my_network
    volumes:
      - ./Product_Service/product_service:/code 
    depends_on:
      - dapr_sidecar_product
      - postgres_db
      - broker

  dapr_sidecar_product:
    image: daprio/dapr
    command: ["dapr", "run", "--app-id", "product_service", "--dapr-http-port", "3501", "--app-port", "8000", "--", "python", "main.py"]
    networks:
      - my_network
    volumes:
      - ./Product_Service/product_service:/code  

  postgres_db:
    image: postgres:latest  
    restart: always
    container_name: PostgresCont
    environment:
      POSTGRES_USER: hamad  
      POSTGRES_PASSWORD: 4535Hamadshah               
      POSTGRES_DB: mydatabase                       
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '19092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
      - my_network

volumes:
  postgres_data:
    driver: local

networks:
  my_network:
    driver: bridge
